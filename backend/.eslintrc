{
  "root": true,
  "env": {
    "browser": true, // For frontend
    "node": true, // For backend
    "es2021": true // For modern JavaScript features
  },
  "parserOptions": {
    "ecmaVersion": 12, // ES2021
    "sourceType": "module" // For import/export
  },
  "extends": [
    "eslint:recommended", // Base recommended rules
    "plugin:react/recommended", // React-specific rules
    "plugin:node/recommended" // Node-specific rules
  ],
  "plugins": ["react", "import", "jsx-a11y"], // Add plugins for React, accessibility, and imports
  "rules": {
    // Define custom rules here
    "no-console": "warn", // Example: Warn on console.log usage
    "react/prop-types": "off", // Example: Disable prop-types check for React
    "node/no-unpublished-require": "off" // Disable warnings for devDependencies in backend
  },
  "overrides": [
    {
      "files": ["frontend/**/*.js", "frontend/**/*.jsx"],
      "env": {
        "browser": true
      },
      "rules": {
        // General rules
        "no-console": "warn", // Warns on console.log usage
        "no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }], // Ignores unused variables starting with _
        "no-debugger": "error", // Disallows debugger statements
        "prefer-const": "warn", // Prefers const for variables never reassigned
        "consistent-return": "error", // Enforces consistent return statements

        // Code style rules
        "indent": ["error", 2], // Enforces 2-space indentation
        "quotes": ["error", "single"], // Requires single quotes
        "semi": ["error", "always"], // Enforces semicolons
        "max-len": ["warn", { "code": 80 }], // Warns if line length exceeds 80 characters
        "comma-dangle": ["error", "always-multiline"], // Requires trailing commas in multiline objects/arrays

        // React-specific rules
        "react/prop-types": "error", // Enforces prop type validation
        "jsx-quotes": ["error", "prefer-double"], // Requires double quotes in JSX attributes
        "react/no-inline-styles": "warn", // Warns on inline styles in JSX
        "react/react-in-jsx-scope": "off", // Disables React-in-scope rule for modern React
        "react/self-closing-comp": "error" // Enforces self-closing tags for components without children
      }
    },
    {
      "files": ["backend/**/*.js"],
      "env": {
        "node": true
      },
      "rules": {
        // Backend (Node.js) rules
        "node/no-unhandled-rejection": "error", // Enforces handling of rejected Promises
        "callback-return": "error", // Requires return statements after callbacks
        "no-process-exit": "error", // Disallows process.exit()
        "node/no-path-concat": "error" // Disallows string concatenation for paths
      }
    }
  ]
}
